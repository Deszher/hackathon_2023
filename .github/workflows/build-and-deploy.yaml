name: Build docker image and deploy to server

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest
    env:
      docker_registry_user: djvue
      docker_registry_password: dckr_pat_xtFqmYgMv2scAvkHO6QdF1V9biY
      docker_registry: djvue/urfu-deployments
      image_base: $docker_registry:hackathon-2023-base:latest
      image_streamlit: $docker_registry:hackathon-2023-streamlit-${{ github.ref_name }}
    steps:
    - uses: actions/checkout@v2
    - name: Login into docker hub
      run: docker login -u $docker_registry_user -p "$docker_registry_password"
    - name: Build the Docker base image
      run: docker build . --file Dockerfile_base --tag $image_base
    - name: Build the Docker streamlit image
      run: docker build . --file Dockerfile_streamlit --tag $image_streamlit
    - name: Push the Docker fastapi image
      run: docker push $image_streamlit

  deploy:
    name: Deploy to prod host
    runs-on: ubuntu-latest
    env:
      PACKAGES_TO_UPGRADE: ${{ needs.run_publish.outputs.packages }}
      DISPATCH_TOKEN: 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

      event_type: deploy_hackathon_2023
      ansible_tags: all
      image_tag: ${{ github.ref_name }}

    strategy:
      matrix:
        repo: ['djvue/urfu-deployments']
    timeout-minutes: 5
    # TODO: replace hardcode of token `token $DISPATCH_TOKEN` with `${{ secrets.DISPATCH_TOKEN }}`
    steps:
      - name: Dispatch to workflows
        run: |
            curl -H "Accept: application/vnd.github.everest-preview+json" \
            -H "Authorization: token ${{ secrets.DISPATCH_TOKEN }}" \
            --request POST \
            --data '{"event_type": "$event_type", "client_payload": { "ansible_tags": "$ansible_tags", "image_tag": "$image_tag" }}' \
            https://api.github.com/repos/${{ matrix.repo }}/dispatches